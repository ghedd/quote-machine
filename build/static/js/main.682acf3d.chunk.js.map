{"version":3,"sources":["images/quote_icon.svg","components/Buttons/index.js","components/Loading/index.js","components/QuoteBox/index.js","components/Footer/index.js","components/App.js","index.js"],"names":["module","exports","Buttons","getNewQuote","quoteContent","className","id","onClick","fetchNewQuote","target","rel","role","href","quote","author","Loading","QuoteBox","isLoading","src","quoteIcon","alt","Footer","photoAuthor","authorCredLink","authorUnsplash","unsplash","App","useState","setIsLoading","isFirstLoading","setIsFirstLoading","setQuoteContent","error","setError","getQuoteContent","a","fetch","resp","ok","json","data","Error","console","log","useEffect","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,wC,oQCmC5BC,G,MA9BC,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC9B,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,qBACb,4BACEC,GAAG,YACHD,UAAU,cACVE,QAAS,kBAVG,SAACJ,GACrBA,IASuBK,CAAcL,KAH/B,cAQF,yBAAKE,UAAU,kBAEb,uBACEI,OAAO,SACPC,IAAI,sBACJC,KAAK,SACLN,UAAU,cACVC,GAAG,cACHM,KAAI,gDAA2CR,EAAaS,MAAxD,eAAoET,EAAaU,SANvF,aCJOC,G,MAbC,WACd,OACE,yBAAKV,UAAU,WAEb,yBAAKA,UAAU,yBACb,8BACA,8BACA,kCCsBOW,EA1BE,SAAC,GAA8C,IAA5CZ,EAA2C,EAA3CA,aAAcD,EAA6B,EAA7BA,YAAac,EAAgB,EAAhBA,UAC7C,OACE,yBAAKX,GAAG,aACN,yBAAKD,UAAU,YACb,yBAAKa,IAAKC,IAAWC,IAAI,aAAaf,UAAU,wBAC/CY,EACC,kBAAC,EAAD,MAEA,oCACE,yBAAKZ,UAAU,kBACb,uBAAGC,GAAG,QAAQF,EAAaS,QAE7B,wBAAIR,UAAU,sBACd,yBAAKA,UAAU,oBACb,0BAAMC,GAAG,UAAUF,EAAaU,WAOxC,kBAAC,EAAD,CAASX,YAAaA,EAAaC,aAAcA,MCAxCiB,G,MAvBA,SAAC,GAA+D,IAA7DC,EAA4D,EAA5DA,YAAaC,EAA+C,EAA/CA,eAAgBC,EAA+B,EAA/BA,eAAgBC,EAAe,EAAfA,SAC7D,OACE,gCACE,yBAAKpB,UAAU,iBACb,0BAAMA,UAAU,eAAhB,WACW,IACT,gCACE,uBAAGA,UAAU,oBAAoBO,KAAMW,GACpCD,IAEK,IANZ,KAOK,IACH,gCACE,uBAAGjB,UAAU,oBAAoBO,KAAMY,GACpCC,SCVTH,EACE,oBADFA,EAGF,8GAHEA,EAKF,8FALEA,EAMM,WAiEGI,EA5DH,WAAO,IAAD,EACkBC,oBAAS,GAD3B,mBACTV,EADS,KACEW,EADF,OAE4BD,oBAAS,GAFrC,mBAETE,EAFS,KAEOC,EAFP,OAGwBH,mBAAS,IAHjC,mBAGTvB,EAHS,KAGK2B,EAHL,OAIUJ,mBAAS,IAJnB,mBAITK,EAJS,KAIFC,EAJE,KAMVC,EAAe,uCAAG,8BAAAC,EAAA,6DACtBP,GAAa,GADS,kBAGHQ,MAXL,oDAQQ,YAGhBC,EAHgB,QAIXC,GAJW,wBAMlBV,GAAa,GANK,SAQDS,EAAKE,OARJ,OAQdC,EARc,OASlBT,EAAgBS,GATE,8BAWZC,MAAM,2BAXM,0DAcpBR,EAAS,EAAD,IACRS,QAAQC,IAAR,MAfoB,0DAAH,qDA0BrB,OAPAC,qBAAU,WACRC,YAAW,WACTf,GAAkB,KACjB,KACHI,MACC,IAECF,EAEA,8BACE,qCAGKH,EACF,kBAAC,EAAD,MAGL,0BAAMxB,UAAU,OACd,kBAAC,EAAD,CACEY,UAAWA,EACXb,aAAcA,EACdD,YAAa+B,IAGf,kBAAC,EAAD,CACEZ,YAAaA,EACbC,eAAgBD,EAChBE,eAAgBF,EAChBG,SAAUH,MCjEpBwB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.682acf3d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/quote_icon.4fa1cef6.svg\";","import React from \"react\";\nimport \"./style.scss\";\nconst fetchNewQuote = (getNewQuote) => {\n  getNewQuote();\n};\nconst Buttons = ({ getNewQuote, quoteContent }) => {\n  return (\n    <div className=\"Btns\">\n      <div className=\"Btns__BtnGenerate\">\n        <button\n          id=\"new-quote\"\n          className=\"btn btn--pr\"\n          onClick={() => fetchNewQuote(getNewQuote)}\n        >\n          new quote\n        </button>\n      </div>\n      <div className=\"Btns__BtnTweet\">\n        {/* <button className=\"btn btn--sc\"> */}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          role=\"button\"\n          className=\"btn btn--sc\"\n          id=\"tweet-quote\"\n          href={`https://twitter.com/intent/tweet?text=${quoteContent.quote} -- ${quoteContent.author}`}\n        >\n          tweet\n        </a>\n        {/* </button> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Buttons;\n","import React from \"react\";\nimport \"./style.scss\";\nconst Loading = () => {\n  return (\n    <div className=\"Loading\">\n      {/* loading animation from Loading.io */}\n      <div className=\"Loading__lds-facebook\">\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\nimport \"./style.scss\";\nimport quoteIcon from \"../../images/quote_icon.svg\";\nimport Buttons from \"../Buttons\";\nimport Loading from \"../Loading\";\nconst QuoteBox = ({ quoteContent, getNewQuote, isLoading }) => {\n  return (\n    <div id=\"quote-box\">\n      <div className=\"InnerBox\">\n        <img src={quoteIcon} alt=\"quote icon\" className=\"InnerBox__QuoteIcon\" />\n        {isLoading ? (\n          <Loading />\n        ) : (\n          <>\n            <div className=\"InnerBox__Text\">\n              <p id=\"text\">{quoteContent.quote}</p>\n            </div>\n            <hr className=\"InnerBox__Hrzline\" />\n            <div className=\"InnerBox__Author\">\n              <span id=\"author\">{quoteContent.author}</span>\n            </div>\n          </>\n        )}\n\n        {/* <div className=\"InnerBox__LongTextIndicator\" /> */}\n      </div>\n      <Buttons getNewQuote={getNewQuote} quoteContent={quoteContent} />\n    </div>\n  );\n};\n\nexport default QuoteBox;\n","import React from \"react\";\nimport \"./style.scss\";\n\nconst Footer = ({ photoAuthor, authorCredLink, authorUnsplash, unsplash }) => {\n  return (\n    <footer>\n      <div className=\"FooterWrapper\">\n        <span className=\"PhotoCredit\">\n          Photo by{\" \"}\n          <strong>\n            <a className=\"PhotoCredit__Link\" href={authorCredLink}>\n              {photoAuthor}\n            </a>\n          </strong>{\" \"}\n          on{\" \"}\n          <strong>\n            <a className=\"PhotoCredit__Link\" href={authorUnsplash}>\n              {unsplash}\n            </a>\n          </strong>\n        </span>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"../style/main.scss\";\nimport QuoteBox from \"./QuoteBox\";\nimport Footer from \"./Footer\";\nimport Loading from \"./Loading\";\n\nconst photoAuthor = {\n  name: \"Danielle MacInnes\",\n  credit:\n    \"https://unsplash.com/@dsmacinnes?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\",\n  unspLink:\n    \"/s/photos/quotes?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\",\n  photoLib: \"Unsplash\",\n};\n\nconst QUOTE_URL = \"http://quotes.stormconsultancy.co.uk/random.json\";\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isFirstLoading, setIsFirstLoading] = useState(true);\n  const [quoteContent, setQuoteContent] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  const getQuoteContent = async () => {\n    setIsLoading(true);\n    try {\n      let resp = await fetch(QUOTE_URL);\n      if (resp.ok) {\n        // setTimeout(() => {\n        setIsLoading(false);\n        // }, 500);\n        let data = await resp.json();\n        setQuoteContent(data);\n      } else {\n        throw Error(\"Uhh error fetching post\");\n      }\n    } catch (err) {\n      setError(err);\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsFirstLoading(false);\n    }, 500);\n    getQuoteContent();\n  }, []);\n\n  if (error) {\n    return (\n      <main>\n        <p>Error</p>\n      </main>\n    );\n  } else if (isFirstLoading) {\n    return <Loading />;\n  } else {\n    return (\n      <main className=\"App\">\n        <QuoteBox\n          isLoading={isLoading}\n          quoteContent={quoteContent}\n          getNewQuote={getQuoteContent}\n        />\n\n        <Footer\n          photoAuthor={photoAuthor.name}\n          authorCredLink={photoAuthor.credit}\n          authorUnsplash={photoAuthor.unspLink}\n          unsplash={photoAuthor.photoLib}\n        />\n      </main>\n    );\n  }\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}